name: Run the unit tests
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - uses: ./.github/actions/install-dependencies

      - name: Run Pytest
        run: pytest

  runmigrations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - uses: ./.github/actions/install-dependencies

      - name: Run django migrate
        run: python manage.py migrate

  migrations-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - uses: ./.github/actions/install-dependencies

      - name: Run runmigrations
        run: python manage.py makemigrations --check

  semantic-release:
    runs-on: ubuntu-latest
    needs:
      - test
      - runmigrations
      - migrations-check
    if: github.ref == 'refs/heads/main'
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic.outputs.new_release_version }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Run semantic-release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/github
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker-image:
    runs-on: ubuntu-latest
    needs:
      - semantic-release
    if: github.ref == 'refs/heads/main' && needs.semantic-release.outputs.new-release-published == 'true'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      -  name: Docker meta
         id: meta
         uses: docker/metadata-action@v5
         with:
           images: ghcr.io/cctsbs24059/devops_sandbox1
           tags: |
            type=semver,pattern={{version}},value=v${{ needs.semantic-release.outputs.new-release-version}}

           # Go to gh repository, settings, secrets and variables, actions,
           # variables,variable 1: {REGISTRY: ghcr.io}, variable 2: {IMAGE_NAME:cctsbs24059/devops_sandbox1}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          push: true
          labels: ${{ steps.meta.outputs.labels }}


  deploy-application:
    runs-on: ubuntu-latest
    needs:
      - semantic-release
      - build-docker-image
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update Image version in values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'envs/prod/values.yaml'
          propertyPath: 'image.tag'
          value: ${{ needs.semantic-release.outputs.new_release_version }}
          branch: main
          commitChange: true
          message: "chore: Deploy image version ${{ needs.semantic-release.outputs.new_release_version }} to production [skip ci]"